-- Create Users Table (Superclass)
CREATE TABLE IF NOT EXISTS BANK_USER (
    user_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role VARCHAR(50) NOT NULL
);

-- Create Customer and Admin Tables (Extending BANK_USER)
CREATE TABLE IF NOT EXISTS CUSTOMER_USER (
    user_id BIGINT PRIMARY KEY,
    FOREIGN KEY (user_id) REFERENCES BANK_USER(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS ADMIN_USER (
    user_id BIGINT PRIMARY KEY,
    FOREIGN KEY (user_id) REFERENCES BANK_USER(user_id) ON DELETE CASCADE
);

-- Create Account Table (Superclass)
CREATE TABLE IF NOT EXISTS ACCOUNTS (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    account_number VARCHAR(20) NOT NULL UNIQUE,
    balance DECIMAL(19,2) NOT NULL DEFAULT 0.00,
    user_id BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES CUSTOMER_USER(user_id) ON DELETE CASCADE
);

-- Create BusinessAccount, CheckingAccount, and SavingsAccount Tables (Extending ACCOUNTS)
CREATE TABLE IF NOT EXISTS BUSINESS_ACCOUNTS (
    id BIGINT PRIMARY KEY,
    credit_limit DECIMAL(19,2) NOT NULL,
    FOREIGN KEY (id) REFERENCES ACCOUNTS(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS CHECKING_ACCOUNTS (
    id BIGINT PRIMARY KEY,
    overdraft_limit DECIMAL(19,2) NOT NULL,
    FOREIGN KEY (id) REFERENCES ACCOUNTS(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS SAVINGS_ACCOUNT (
    id BIGINT PRIMARY KEY,
    interest_rate DECIMAL(5,2) NOT NULL,
    FOREIGN KEY (id) REFERENCES ACCOUNTS(id) ON DELETE CASCADE
);

-- Create AccountCreationRequest Table
CREATE TABLE IF NOT EXISTS ACCOUNT_CREATION_REQUEST (
    request_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    account_type VARCHAR(255) NOT NULL,
    requested_by BIGINT NOT NULL,
    status VARCHAR(50) NOT NULL DEFAULT 'PENDING',
    reviewed_by BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    reviewed_at TIMESTAMP NULL,
    FOREIGN KEY (requested_by) REFERENCES CUSTOMER_USER(user_id) ON DELETE CASCADE,
    FOREIGN KEY (reviewed_by) REFERENCES ADMIN_USER(user_id) ON DELETE SET NULL
);

-- Create AdminComment Table
CREATE TABLE IF NOT EXISTS ADMIN_COMMENT (
    comment_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    request_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    comment TEXT NOT NULL,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (request_id) REFERENCES ACCOUNT_CREATION_REQUEST(request_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES ADMIN_USER(user_id) ON DELETE CASCADE
);

-- Create Transactions Table (Superclass)
CREATE TABLE IF NOT EXISTS TRANSACTIONS (
    transaction_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    transaction_number VARCHAR(255) NOT NULL UNIQUE,
    account_number VARCHAR(20) NOT NULL,
    transaction_type VARCHAR(50) NOT NULL,
    amount DECIMAL(19,2) NOT NULL,
    timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (account_number) REFERENCES ACCOUNTS(account_number) ON DELETE CASCADE
);

-- Create Merchant Transactions Table (Extending TRANSACTIONS)
CREATE TABLE IF NOT EXISTS MERCHANT_TRANSACTIONS (
    transaction_id BIGINT PRIMARY KEY,
    merchant_name VARCHAR(255) NOT NULL,
    merchant_category VARCHAR(50) NOT NULL,
    FOREIGN KEY (transaction_id) REFERENCES TRANSACTIONS(transaction_id) ON DELETE CASCADE
);

-- Create Transfer Transactions Table (Extending TRANSACTIONS)
CREATE TABLE IF NOT EXISTS TRANSFER_TRANSACTIONS (
    transaction_id BIGINT PRIMARY KEY,
    receiving_account_number VARCHAR(20) NOT NULL,
    linked_transaction_id BIGINT,
    transfer_direction VARCHAR(50) NOT NULL,
    FOREIGN KEY (transaction_id) REFERENCES TRANSACTIONS(transaction_id) ON DELETE CASCADE,
    FOREIGN KEY (receiving_account_number) REFERENCES ACCOUNTS(account_number) ON DELETE CASCADE,
    FOREIGN KEY (linked_transaction_id) REFERENCES TRANSACTIONS(transaction_id) ON DELETE CASCADE
);